from aiogram.types import ReplyKeyboardMarkup, \
    ReplyKeyboardRemove, KeyboardButton, \
    InlineKeyboardButton, InlineKeyboardMarkup
from schedule_json.vars import WeekDays_EN, WeekDays_RU

all_shedule_btn = KeyboardButton("–í—Å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
next_lesson_btn = KeyboardButton("C–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä–∞")
todays_shedule_btn = KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")

rating_btn = KeyboardButton("–†–∞—Å—á–∏—Ç–∞—Ç—å –∏—Ç–æ–≥–æ–≤—É—é –æ—Ü–µ–Ω–∫—É")
alert_btn = KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
find_group_btn = KeyboardButton("–ù–∞–π—Ç–∏ –≥—Ä—É–ø–ø—É")

register_btn = KeyboardButton("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
register_cancel = KeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é")
register_yes = KeyboardButton("–î–∞")
register_no = KeyboardButton("–ù–µ—Ç")

keys_btn = KeyboardButton("–£ –º–µ–Ω—è –µ—Å—Ç—å –∫–ª—é—á")

change_sched_btn = KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
add_lesson_btn = KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫")
delete_lesson_btn = KeyboardButton("–£–±—Ä–∞—Ç—å —É—Ä–æ–∫")
replace_lesson_btn = KeyboardButton("–ó–∞–º–µ–Ω–∏—Ç—å —É—Ä–æ–∫")

subgroup1_btn = KeyboardButton("1")
subgroup2_btn = KeyboardButton("2")
subgroup3_btn = KeyboardButton("3")

cat_btn = 'üêà'

stud_kb = ReplyKeyboardMarkup(resize_keyboard=True)
stud_kb.row(all_shedule_btn, next_lesson_btn, todays_shedule_btn)
stud_kb.add(change_sched_btn)
stud_kb.row(alert_btn, rating_btn)

tester_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
tester_kb.add(keys_btn)

anon_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
anon_kb.row(register_btn)

question_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
question_kb.row(register_yes, register_no)

register_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
register_kb.add(register_cancel)

change_sched_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
change_sched_kb.row(add_lesson_btn, delete_lesson_btn, replace_lesson_btn)

subgroup_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
subgroup_kb.row(subgroup1_btn, subgroup2_btn, subgroup3_btn)

cat_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
cat_kb.row(cat_btn)


def createButtons(btns_l: list):
    group = []
    for i in btns_l:
        group.append(i)
    test = ReplyKeyboardMarkup(resize_keyboard=True)
    for i in range(len(group)):
        if i % 2 == 0:
            test.row(KeyboardButton(str(group[i])))
        else:
            test.add(KeyboardButton(str(group[i])))
        test.add(register_cancel)
    return test


def days():
    days_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for i in range(len(WeekDays_RU)):
        days_kb.add(WeekDays_RU[i])
        if i == 3:
            days_kb.row()

    return days_kb

def free_time(time: list):
    free_time_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for i in time:
        free_time_kb.add(i)
    return free_time_kb

# greet_kb1 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(button_hi)

# inline_btn_1 = InlineKeyboardButton('–ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞!', callback_data='button1')
# inline_kb1 = InlineKeyboardMarkup().add(inline_btn_1)